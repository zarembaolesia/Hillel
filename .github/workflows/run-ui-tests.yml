name: UI tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run-ui-tests:
    name: UI Tests
    runs-on: ubuntu-latest
    steps:
      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
      # Restore .NET dependencies
      - name: Restore dependencies
        run: dotnet restore
      # Build the project
      - name: Build
        run: dotnet build
      # Install Playwright browsers
      - name: Ensure browsers are installed
        run: pwsh ${{github.workspace}}/tests/Library.Tests.Ui/bin/Debug/net8.0/playwright.ps1 install --with-deps
      # Run NUnit Playwright tests
      - name: Run UI tests
        run: dotnet tests ${{github.workspace}}/tests/Library.Tests.Ui/Library.Tests.Ui.csproj --logger "trx;LogFileName=test_results.trx" --results-directory ${{github.workspace}}/tests/Library.Tests.Ui/bin/Debug/net8.0/test-results
      # Upload test results as artifacts
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{github.workspace}}/tests/Library.Tests.Ui/bin/Debug/net8.0/test-results

  test-results:
    name: Get Test Results
    runs-on: ubuntu-latest
    needs: run-ui-tests
    steps:
      # Display test results using dorny/test-reporter
      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always() # Always run this step, even if previous steps fail
        with:
          artifact: test-results
          name: UI tests results
          reporter: dotnet-trx
          path: './test-results/test-results.xml'
          fail-on-error: 'false'